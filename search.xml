<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Zabbix</title>
      <link href="/2019/12/13/DevOps/Zabbix/"/>
      <url>/2019/12/13/DevOps/Zabbix/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是-zabbix-？"><a class="header-anchor" href="#什么是-zabbix-？"></a>什么是 Zabbix ？</h2><section class="reference"><p>Zabbix 是一种系统监控。网络监控、服务监控工具。</p></section><h4 id="监控对象"><a class="header-anchor" href="#监控对象"></a>监控对象</h4><section class="reference"><ul><li>主机</li><li>软件</li></ul></section><h4 id="模块功能"><a class="header-anchor" href="#模块功能"></a>模块功能</h4><section class="reference"><ul><li>Monitoring<ul><li>信息聚合</li><li>状态展示</li><li>信息查询</li><li>监控统计</li></ul></li><li>Inventory<ul><li>资产信息<ul><li>管理</li><li>查询</li></ul></li></ul></li><li>Report<ul><li>报表</li><li>审计</li><li>日志</li></ul></li><li>Configuration<ul><li>主机信息配置</li><li>监控规则配置</li><li>报警规则配置</li><li>统计图表配置</li><li>自动发现配置</li></ul></li><li>Administrator<ul><li>用户权限管理</li><li>报警方式配置</li><li>脚本配置</li><li>代理配置</li></ul></li><li>Personal<ul><li>接收报警配置</li><li>接收报警规则</li><li>个人信息管理</li></ul></li></ul></section><h2 id="zabbix-特点"><a class="header-anchor" href="#zabbix-特点"></a>Zabbix 特点</h2><section class="reference"><ul><li>安装简单</li><li>监控方便</li><li>免费开源</li><li>自动化</li><li>C/S 结构、分布式架构</li></ul></section><h2 id="与同类型比较"><a class="header-anchor" href="#与同类型比较"></a>与同类型比较</h2><section class="reference"><table><thead><tr><th>系统名称</th><th>默认监控</th><th>自定义监控</th><th>批量监控</th><th>修改监控</th><th>图表</th><th>报警</th><th>其他</th></tr></thead><tbody><tr><td>Zabbix</td><td>自带监控多</td><td>可自定义编写插件</td><td>server 端可配置自动注册规则；client 端无需操作</td><td>手动在模板中新增监控</td><td>自带图表插件</td><td>支持多种报警，依赖插件</td><td>自带 Web 监控</td></tr><tr><td>Nagios</td><td>自带监控少</td><td>可自定义编写插件</td><td>用脚本在 server 端新增 host， 并拷贝 service 文件</td><td>用脚本修改所有主机的 service 文件，加入新增服务</td><td>可以按照图表插件</td><td>支持多种报警，依赖插件</td><td></td></tr></tbody></table><hr><div class="info"><ul><li>Zabbix 使用更友好，探索功能需要较多时间，学习成本较大</li><li>Nagios 容易上手，脚本很强大，但写起来也费时费力</li></ul></div></section><h2 id="架构图"><a class="header-anchor" href="#架构图"></a>架构图</h2><section class="reference"><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/DevOps/Zabbix架构.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></section><h4 id="部署方式"><a class="header-anchor" href="#部署方式"></a>部署方式</h4><section class="reference"><ul><li>网络协议模式：server-client</li><li>代理模式：server-proxy-client</li><li>节点模式：master-node-client</li></ul></section><h2 id="使用"><a class="header-anchor" href="#使用"></a>使用</h2><section class="reference"></section><h4 id="安装"><a class="header-anchor" href="#安装"></a>安装</h4><section class="reference"><ol><li>打开<a href="https://www.zabbix.com/download" target="_blank" rel="noopener">官网下载页面</a></li><li>选择操作系统</li><li>按引导安装<ol><li>安装 Server 端<ol><li>添加源</li><li>安装 Server</li><li>安装 MySQL</li><li>初始化 MySQL</li><li>启动 zabbix-server</li></ol></li><li>安装 Web 端<ol><li>安装 Web</li><li>配置 timezone：<ol><li><code>$ vim /etc/php-fpm.d/zabbix.conf</code></li><li><code>; php_value[date.timezone] = Asian/Shanghai</code></li></ol></li><li>启动 [httpd|nginx|apache2] php-fpm</li><li>打开 <code>http://[ip]/zabbix</code><ol><li>默认用户密码：<code>Admin : zabbix</code></li></ol></li></ol></li><li>安装 Agent 端<ol><li>添加源</li><li>安装 Agent</li><li>配置连接的 Server<ol><li><code>$ vim /etc/zabbix/zabbix_agentd.conf</code></li></ol></li><li>启动 zabbix-agent</li></ol></li></ol></li></ol><p><strong><em>踩坑指南</em></strong></p><div class="warning"><ul><li>Mariadb 代替 MySQL</li><li>关闭 SeLinux，否则可能出现：cannot set resource limit</li><li>默认使用 httpd 作为 Web 服务</li></ul></div></section><h4 id="web-使用"><a class="header-anchor" href="#web-使用"></a>Web 使用</h4><section class="reference"><p><strong><em>配置自动发现</em></strong></p><div id="flowchart-0" class="flow-chart"></div><p><strong><em>配置报警</em></strong></p><div id="flowchart-1" class="flow-chart"></div><p><strong><em>配置发送报警</em></strong></p><div id="flowchart-2" class="flow-chart"></div><p><strong><em>配置接收报警</em></strong></p><div id="flowchart-3" class="flow-chart"></div><p><strong><em>配置统计图表</em></strong></p><div id="flowchart-4" class="flow-chart"></div><p><strong><em>配置聚合图表</em></strong></p><div id="flowchart-5" class="flow-chart"></div><p><strong><em>用户管理</em></strong></p><div id="flowchart-6" class="flow-chart"></div><p><strong><em>配置聚合图表</em></strong></p><div id="flowchart-7" class="flow-chart"></div></section><h4 id="通用设置套路"><a class="header-anchor" href="#通用设置套路"></a>通用设置套路</h4><section class="reference"><div id="flowchart-8" class="flow-chart"></div></section><h4 id="web-api"><a class="header-anchor" href="#web-api"></a>Web API</h4><section class="reference"></section><h5 id="功能"><a class="header-anchor" href="#功能"></a>功能</h5><section class="reference"><ul><li>远程管理 Zabbix 配置</li><li>远程检索配置和历史数据</li></ul></section><h5 id="接入方式"><a class="header-anchor" href="#接入方式"></a>接入方式</h5><section class="reference"><ul><li><code>http://[ip]:[port]/zabbix/api_jsonrpc.php</code><ul><li>使用 JSON-RPC 实现</li><li>数据传输以 JSON 格式</li></ul></li><li>Headers<ul><li><code>Content-Type: application/json-rpc</code></li><li><code>Content-Type: application/json</code></li><li><code>Content-Type: application/jsonrequest</code></li></ul></li></ul></section><h5 id="接入步骤"><a class="header-anchor" href="#接入步骤"></a>接入步骤</h5><section class="reference"><ul><li>登录获取 token</li><li>请求头带入 Authorization: [token]</li></ul><p><strong><em>参考资料</em></strong><br><a href="https://coding.imooc.com/class/239.html#Anchor" target="_blank" rel="noopener">中小型企业通用自动化运维架构</a><br><a href="https://blog.csdn.net/u010285974/article/details/86702421" target="_blank" rel="noopener">zabbix与nagios对比</a><script src="https://cdn.bootcss.com/raphael/2.3.0/raphael.min.js"></script><script src="https://cdn.bootcss.com/flowchart/1.12.2/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">op1=>operation: Configurationop2=>operation: Discovery   op3=>operation: Create Discovery Rulesop4=>operation: Create Rulesop1(right)->op2op2(right)->op3op3(right)->op4</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><textarea id="flowchart-1-code" style="display: none">op1=>operation: Configurationop2=>operation: Create Action   op3=>operation: Create Conditionop4=>operation: Create Operationop1(right)->op2op2(right)->op3op3(right)->op4</textarea><textarea id="flowchart-1-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-1-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-1-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-1", options);</script><textarea id="flowchart-2-code" style="display: none">op1=>operation: Administratorop2=>operation: Media Typeop3=>operation: Emailop4=>operation: Updateop1(right)->op2op2(right)->op3op3(right)->op4</textarea><textarea id="flowchart-2-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-2-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-2-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-2", options);</script><textarea id="flowchart-3-code" style="display: none">op1=>operation: Administratorop2=>operation: Usersop3=>operation: Adminop4=>operation: Mediaop5=>operation: Addop1(right)->op2op2(right)->op3op3(right)->op4op4(right)->op5</textarea><textarea id="flowchart-3-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-3-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-3-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-3", options);</script><textarea id="flowchart-4-code" style="display: none">op1=>operation: Configurationop2=>operation: Hostsop3=>operation: Graphsop4=>operation: 条目选择op1(right)->op2op2(right)->op3op3(right)->op4</textarea><textarea id="flowchart-4-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-4-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-4-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-4", options);</script><textarea id="flowchart-5-code" style="display: none">op1=>operation: Monitoringop2=>operation: Screensop3=>operation: Addop4=>operation: Edit Screenop1(right)->op2op2(right)->op3op3(right)->op4</textarea><textarea id="flowchart-5-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-5-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-5-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-5", options);</script><textarea id="flowchart-6-code" style="display: none">op1=>operation: Administratorop2=>operation: Usersop3=>operation: User Groupsop1(right)->op2op2(right)->op3</textarea><textarea id="flowchart-6-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-6-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-6-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-6", options);</script><textarea id="flowchart-7-code" style="display: none">op1=>operation: Monitoringop2=>operation: Screensop3=>operation: Addop4=>operation: Edit Screenop1(right)->op2op2(right)->op3op3(right)->op4</textarea><textarea id="flowchart-7-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-7-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-7-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-7", options);</script><textarea id="flowchart-8-code" style="display: none">op1=>operation: 创建监控脚本op2=>operation: 创建 Zabbix Itemop3=>operation: 创建 Zabbix Triggerop4=>operation: 创建 Zabbix Actionop1(right)->op2op2(right)->op3op3(right)->op4</textarea><textarea id="flowchart-8-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-8-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-8-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-8", options);</script></p></section>]]></content>
      
      
      <categories>
          
          <category> DevOps </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> Zabbix </tag>
            
            <tag> 监控 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云计算</title>
      <link href="/2019/12/10/DevOps/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
      <url>/2019/12/10/DevOps/%E4%BA%91%E8%AE%A1%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<h2 id="概念"><a class="header-anchor" href="#概念"></a>概念</h2><section class="reference"><p>云计算（cloud computing）是分布式计算的一种，指的是通过网络“云”将巨大的数据计算处理程序分解成无数个小程序，然后，通过多部服务器组成的系统进行处理和分析这些小程序得到结果并返回给用户。云计算早期，简单地说，就是简单的分布式计算，解决任务分发，并进行计算结果的合并。因而，云计算又称为网格计算。通过这项技术，可以在很短的时间内（几秒种）完成对数以万计的数据的处理，从而达到强大的网络服务。<br>现阶段所说的云服务已经不单单是一种分布式计算，而是分布式计算、效用计算、负载均衡、并行计算、网络存储、热备份冗杂和虚拟化等计算机技术混合演进并跃升的结果。</p></section><h2 id="特点"><a class="header-anchor" href="#特点"></a>特点</h2><section class="reference"><ul><li>虚拟化(计算、存储、网络等)</li><li>产品服务化(IaaS、PaaS、SaaS……)</li><li>弹性伸缩</li></ul></section><h2 id="架构"><a class="header-anchor" href="#架构"></a>架构</h2><section class="reference"><ul><li>基础设施层(IaaS)</li><li>平台层(PaaS)</li><li>软件服务层(SaaS)</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/DevOps/云架构.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></section><h2 id="分类"><a class="header-anchor" href="#分类"></a>分类</h2><section class="reference"><ul><li>私有云</li><li>公有云</li><li>混合云</li></ul><p><strong><em>荤段子论</em></strong></p><blockquote><p>男人找个女友或老婆是自建<strong>私有云</strong>，单身约炮或者到娱乐场所消费是<strong>公有云</strong>服务，按需使用并可弹性扩容，已婚男人找二奶小蜜则属于<strong>混合云</strong>。</p></blockquote></section>]]></content>
      
      
      <categories>
          
          <category> DevOps </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云计算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DevOps</title>
      <link href="/2019/12/09/DevOps/DevOps/"/>
      <url>/2019/12/09/DevOps/DevOps/</url>
      
        <content type="html"><![CDATA[<h2 id="前置知识"><a class="header-anchor" href="#前置知识"></a>前置知识</h2><section class="reference"><a href="/2019/12/10/DevOps/%E4%BA%91%E8%AE%A1%E7%AE%97/" title="云计算">云计算</a></section><h2 id="概念"><a class="header-anchor" href="#概念"></a>概念</h2><section class="reference"><p><code>DevOps = Development(开发人员) + Operations(运维人员)</code></p><p>DevOps 是一种重视“开发人员”和“运维人员”之间沟通合作的文化、运动或者惯例。通过自动化“软件交付”和“架构变更”的流程，使构建、测试、发布软件能更快、更频繁和更可靠。</p><p><strong><em>各部门关系图</em></strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/DevOps/DevOps.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></section><h2 id="对应用程序发布的影响"><a class="header-anchor" href="#对应用程序发布的影响"></a>对应用程序发布的影响</h2><section class="reference"><ul><li>减少变更范围</li><li>消除等待、快速反馈</li><li>使问题定位、调试变得简单</li><li>加强发布谐调，提升交付质量</li><li>自动化，稳定、快速、交付结果可预测</li><li>资源利用最大化</li></ul></section><h2 id="关键点"><a class="header-anchor" href="#关键点"></a>关键点</h2><section class="reference"><blockquote><ol><li>Automated infrastructure（自动化，系统之间的集成）</li><li>shared version control（SVN共享源码）</li><li>one step build and deploy（持续构建和部署）</li><li>feature flags（主干开发）</li><li>Shared metrics</li><li>IRC and IM robots（信息整合）</li></ol></blockquote><ul><li>CI/CD 一线贯穿以上技术要点</li><li>主干开发是 CI 的前提</li><li>自动化以及代码周边集中管理是实施 CI 的必要条件</li></ul><div class="warning"><p>CI/CD 是 DevOps 的技术核心，在没有自动化测试、CI/CD 之下，DevOps 就是空中楼阁</p></div></section><h2 id="工作流"><a class="header-anchor" href="#工作流"></a>工作流</h2><section class="reference"><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/DevOps/DevOps回路.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></section><h2 id="工具箱"><a class="header-anchor" href="#工具箱"></a>工具箱</h2><section class="reference"><ul><li>代码管理（SCM）<ul><li>GitHub、GitLab、BitBucket、SubVersion</li></ul></li><li>构建工具<ul><li>Ant、Gradle、maven</li></ul></li><li>自动部署<ul><li>Capistrano、CodeDeploy、Ansible、Jenkins</li></ul></li><li>持续集成（CI）<ul><li>Bamboo、Hudson、Jenkins</li></ul></li><li>配置管理<ul><li>Ansible、Chef、Puppet、SaltStack、ScriptRock GuardRail、Consul、Apollo</li></ul></li><li>容器<ul><li>Docker、LXC、第三方厂商如AWS</li></ul></li><li>编排<ul><li>Kubernetes、Core、Apache Mesos、DC/OS</li></ul></li><li>服务注册与发现<ul><li>Zookeeper、etcd、Consul</li></ul></li><li>脚本语言<ul><li>python、ruby、shell</li></ul></li><li>日志管理<ul><li>ELK、Logentries</li></ul></li><li>系统监控<ul><li>Datadog、Graphite、Icinga、Nagios</li></ul></li><li>性能监控<ul><li>AppDynamics、New Relic、Splunk</li></ul></li><li>压力测试<ul><li>JMeter、Blaze Meter、<a href="http://loader.io" target="_blank" rel="noopener">loader.io</a></li></ul></li><li>预警<ul><li>PagerDuty、pingdom、厂商自带如AWS SNS</li></ul></li><li>HTTP加速器<ul><li>Varnish</li></ul></li><li>消息总线<ul><li>ActiveMQ、SQS</li></ul></li><li>应用服务器<ul><li>Tomcat、JBoss</li></ul></li><li>Web服务器<ul><li>Apache、Nginx、IIS</li></ul></li><li>数据库<ul><li>MySQL、Oracle、PostgreSQL等关系型数据库；cassandra、mongoDB、redis等NoSQL数据库</li></ul></li><li>项目管理（PM）<ul><li>Jira、Asana、Taiga、Trello、Basecamp、Pivotal Tracker</li></ul></li></ul><p><strong><em>参考链接</em></strong><br><a href="https://www.jianshu.com/p/47287f203637" target="_blank" rel="noopener">给 DevOps 初学者的入门指南</a></p></section>]]></content>
      
      
      <categories>
          
          <category> DevOps </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ansible </tag>
            
            <tag> 自动化 </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ansible</title>
      <link href="/2019/12/09/DevOps/Ansible/"/>
      <url>/2019/12/09/DevOps/Ansible/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是-ansible-？"><a class="header-anchor" href="#什么是-ansible-？"></a>什么是 Ansible ？</h2><section class="reference"><ul><li>是一种 IT 自动化工具</li><li>依赖现有的操作系统的凭证来访问控制远程机器</li><li>简单易用、安全可靠</li></ul></section><h2 id="ansible-可以完成哪些任务？"><a class="header-anchor" href="#ansible-可以完成哪些任务？"></a>Ansible 可以完成哪些任务？</h2><section class="reference"><ul><li>系统配置</li><li>开发软件</li><li>编排高级的 IT 任务（持续集成等）</li></ul></section><h2 id="ansible-的优点"><a class="header-anchor" href="#ansible-的优点"></a>Ansible 的优点</h2><section class="reference"><ul><li>轻量级</li><li>易学习</li><li>操作灵活</li><li>无客户端</li><li>推送式</li><li>Module 丰富</li><li>商业化支持（Tower）</li></ul></section><h2 id="ansible-的缺点"><a class="header-anchor" href="#ansible-的缺点"></a>Ansible 的缺点</h2><section class="reference"><ul><li>效率低（串行执行）</li><li>易挂起</li></ul></section><h2 id="与其他类似项目对比"><a class="header-anchor" href="#与其他类似项目对比"></a>与其他类似项目对比</h2><section class="reference"><table><thead><tr><th>项目</th><th>客户端</th><th>通信方式</th><th>Web 页面</th><th>效率</th><th>易用</th><th>实现语言</th><th>API</th><th>开源社区</th></tr></thead><tbody><tr><td>Ansible</td><td>无</td><td>ssh</td><td>有（Tower）</td><td>低</td><td>高</td><td>Python</td><td>有</td><td>40.8 K</td></tr><tr><td>Puppet</td><td>有</td><td>socket</td><td>有</td><td>一般</td><td>低</td><td>Ruby</td><td>有</td><td>5.6 K</td></tr><tr><td>Chef</td><td>有</td><td>ssh</td><td>有</td><td>一般</td><td>高</td><td>Python</td><td>有</td><td>6.1 K</td></tr><tr><td>Salt</td><td>有</td><td>RabbitMQ</td><td>有</td><td>高</td><td>高</td><td>Python</td><td>有</td><td>10.5 K</td></tr></tbody></table></section><h2 id="使用"><a class="header-anchor" href="#使用"></a>使用</h2><section class="reference"></section><h3 id="安装"><a class="header-anchor" href="#安装"></a>安装</h3><section class="reference"><ul><li>Mac: <code>pip install ansible</code></li></ul></section><h3 id="配置"><a class="header-anchor" href="#配置"></a>配置</h3><section class="reference"><ul><li>Host 配置: <code>/etc/ansible/hosts</code><ul><li>配置项: <a href="https://docs.ansible.com/ansible/2.4/ansible-inventory.html" target="_blank" rel="noopener">Inventory</a> | <a href="http://www.ansible.com.cn/docs/intro_inventory.html" target="_blank" rel="noopener">Inventory 中文</a></li></ul></li><li>ssh 配置: <code>ssh-copy-id -i .ssh/[公钥文件] [用户]@[远程主机]</code></li></ul></section><h3 id="ad-hoc-playbook"><a class="header-anchor" href="#ad-hoc-playbook"></a>Ad-Hoc &amp; Playbook</h3><section class="reference"><ul><li>类似 <code>shell</code> &amp; <code>shell script</code>，但 Playbook 更加强大</li><li>Playbook 是对 Ad-Hoc 的编排</li><li>Ad-Hoc 适合简单快速的任务</li><li>Playbook 适合复杂异步的任务</li><li>Playbook 解决 shell script 的编写复杂、操作繁琐、跨平台问题</li></ul></section><h4 id="ad-hoc"><a class="header-anchor" href="#ad-hoc"></a>Ad-Hoc</h4><section class="reference"></section><h5 id="语法"><a class="header-anchor" href="#语法"></a>语法</h5><section class="reference"><p><code>ansible [远程主机 | 分组] -m [模块] -a '模块参数'</code></p></section><h4 id="playbook"><a class="header-anchor" href="#playbook"></a>Playbook</h4><section class="reference"></section><h5 id="什么是-playbook"><a class="header-anchor" href="#什么是-playbook"></a>什么是 Playbook ?</h5><section class="reference"><ul><li>由 YAML 编写</li><li>算是一门编程语言</li><li>命令集合</li></ul></section><h5 id="功能"><a class="header-anchor" href="#功能"></a>功能</h5><section class="reference"><ul><li>声明配置</li><li>编排复杂任务</li><li>控制任务执行</li></ul></section><h5 id="语法-v2"><a class="header-anchor" href="#语法-v2"></a>语法</h5><section class="reference"><ul><li>变量（Inventory &amp; Playbook）<ul><li>vars</li></ul></li><li>流程控制<ul><li>循环<ul><li>with_items</li><li>with_nested (嵌套)</li></ul></li><li>判断<ul><li>when [true, false, not]</li></ul></li></ul></li></ul></section><h5 id="基本结构"><a class="header-anchor" href="#基本结构"></a>基本结构</h5><section class="sample"><ul><li>host: 被操作的机器</li><li>remote_user: 登录机器的用户</li><li>tasks: 需要执行的任务</li></ul><div class="warning"><p>如果语句以 “{” 开头，需要用<strong>引号</strong>包起来</p></div><p><strong><em>例子</em></strong><br><code>$ vim test.yml</code></p><pre><code>---- hosts: 192.168.1.111                      // 指定主机  remote_user: root                       // 指定在被管理的主机上执行任务的用户  tasks:                                  // 任务列表  - name: disable selinux                // 任务名    command: '/sbin/setenforce 0'        // 调用command模块 执行关闭防火墙命令  - name: start nginx                    // 任务名    service: name=nginx state=started    // 调用service模块 开启 nginx 服务</code></pre></section><section class="reference"><p><code>$ ansible-playbook test.yml</code></p></section>]]></content>
      
      
      <categories>
          
          <category> DevOps </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ansible </tag>
            
            <tag> 自动化 </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>弹性伸缩</title>
      <link href="/2019/12/09/Aliyun/%E5%BC%B9%E6%80%A7%E4%BC%B8%E7%BC%A9/"/>
      <url>/2019/12/09/Aliyun/%E5%BC%B9%E6%80%A7%E4%BC%B8%E7%BC%A9/</url>
      
        <content type="html"><![CDATA[<h2 id="能力"><a class="header-anchor" href="#能力"></a>能力</h2><section class="reference"><p>根据业务需求和策略自动调整弹性计算资源，在业务需求增长时无缝增加 ECS 实例满足计算需要，在业务需求下降时自动减少 ECS 实例节约成本。</p></section><h2 id="使用"><a class="header-anchor" href="#使用"></a>使用</h2><section class="reference"></section><h4 id="步骤"><a class="header-anchor" href="#步骤"></a>步骤</h4><section class="reference"><div id="flowchart-0" class="flow-chart"></div><script src="https://cdn.bootcss.com/raphael/2.3.0/raphael.min.js"></script><script src="https://cdn.bootcss.com/flowchart/1.12.2/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">op1=>operation: 创建伸缩组op2=>operation: 创建伸缩配置    op3=>operation: 启用伸缩组op4=>operation: 创建伸缩规则op5=>operation: 创建定时任务op6=>operation: 创建报警任务op1(right)->op2op2(right)->op3op3(right)->op4op4(right)->op5op5(right)->op6</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script></section>]]></content>
      
      
      <categories>
          
          <category> 阿里云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 弹性伸缩 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker-部署-Jenkins</title>
      <link href="/2019/12/09/DevOps/Docker-%E9%83%A8%E7%BD%B2-Jenkins/"/>
      <url>/2019/12/09/DevOps/Docker-%E9%83%A8%E7%BD%B2-Jenkins/</url>
      
        <content type="html"><![CDATA[<h2 id="部署"><a class="header-anchor" href="#部署"></a>部署</h2><section class="reference"></section><h4 id="dockerfile"><a class="header-anchor" href="#dockerfile"></a>Dockerfile</h4><section class="sample"><pre><code>FROM jenkins/jenkins:ltsMAINTAINER LockeyUSER rootARG dockerGid=999RUN echo &quot;docker:x:${dockerGid}:jenkins&quot; &gt;&gt; /etc/group</code></pre></section><section class="reference"></section><h4 id="构建"><a class="header-anchor" href="#构建"></a>构建</h4><section class="reference"><p><code>docker build . -t myjenkins</code></p></section><h4 id="运行"><a class="header-anchor" href="#运行"></a>运行</h4><section class="reference"><p><code>docker run -d --privileged=true -p 8005:8080 -p 50000:50000 --name myjenkins_1 -v /root/jenkins:/var/jenkins_home -v /root/.ssh:/var/jenkins_home/.ssh -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/docker:/var/lib/docker -v $(which docker):/usr/bin/docker -v $(which docker-compose):/usr/bin/docker-compose myjenkins</code></p></section><h2 id="slave"><a class="header-anchor" href="#slave"></a>Slave</h2><section class="reference"><ul><li>安装Java(8)<ul><li>apt install openjdk-8-jre-headless</li></ul></li><li>配置免密登录<ul><li>ssh-keygen -t rsa</li></ul></li></ul><p><strong><em>注意</em></strong></p><ul><li>.ssh文件挂载<ul><li>Git访问</li><li>Slave访问</li></ul></li><li>Dockerfile<ul><li>将用户加入docker用户组，不然没有Docker访问权限</li></ul></li></ul></section><h2 id="更换源-国内"><a class="header-anchor" href="#更换源-国内"></a>更换源【国内】</h2><section class="reference"><p>打开： <code>http[s]://[URL]/pluginManager/advanced</code></p><p>替换升级站点URL：<code>https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</code></p><p>PS：如果出现更换后还是走了官方源，可以配置 Nginx：<br><code>rewrite ^/download/plugins/(.*)$ https://mirrors.tuna.tsinghua.edu.cn/jenkins/plugins/$1? last;</code></p></section>]]></content>
      
      
      <categories>
          
          <category> DevOps </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gitbook</title>
      <link href="/2019/12/05/Gitbook/"/>
      <url>/2019/12/05/Gitbook/</url>
      
        <content type="html"><![CDATA[<h2 id="dockerfile"><a class="header-anchor" href="#dockerfile"></a>Dockerfile</h2><section class="sample"><pre><code>FROM nodeWORKDIR /buildEXPOSE 4000RUN npm install gitbook -g;RUN npm install gitbook-cli -g;WORKDIR /build/workRUN gitbook initCMD [&quot;gitbook&quot;, &quot;serve&quot;]</code></pre></section><section class="reference"></section><h2 id="构建"><a class="header-anchor" href="#构建"></a>构建</h2><section class="reference"><p><code>$ docker build . -t acgitbook</code></p></section><h2 id="运行"><a class="header-anchor" href="#运行"></a>运行</h2><section class="reference"><p><code>$ docker run -d --name acgitbook_1 -p 8006:4000 -v /root/jenkins/workspace/acdocs/work:/build/work acgitbook /bin/bash -c &quot;gitbook install;gitbook serve&quot;</code></p></section>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> 文档管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文档工具 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
